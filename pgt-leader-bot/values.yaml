# Default values for pgt-leader-bot.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- The number of replicas
replicaCount: 1

config:
  discord:
    # -- Discord API Token
    token: "mytoken"
    # -- Discord Guild/Server ID
    guildId: "myguildid"
    # -- Discord Channel ID
    forumChannelId: "chanid"
  github:
    # -- Github API Token
    token: "mytoken"
  googleSheets:
    # -- Google Sheets API Credentials
    credentials: "JSON data"
    # -- Google Sheets Spreadsheet ID
    spreadsheetId: "mysheetid"
    # -- Email to send notifications to
    email: "myemail"
  mongo:
    # -- MongoDB Collection
    collection: "mycollection"
    # -- MongoDB Database
    database: "mydb"
    # -- MongoDB Host
    host: "myhost"
  openAi:
    # -- OpenAI API Key
    apiKey: "myapikey"
  # -- Shared Secret
  sharedSecret: "mysharedsecret"

api:
  # -- Logs Level
  logLevel: "INFO"

bot:
  # -- Logs Level
  logLevel: "INFO"

mongodb:
  auth:
    # -- Enable MongoDB Authentication
    enabled: false

image:
  # -- The repository of the image
  repository: 673156464838.dkr.ecr.us-west-2.amazonaws.com/pgt-leader-bot
  # -- The pullPolicy used when pulling the image
  pullPolicy: Always
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: "0.0.1"

# -- The secrets used to pull the image
imagePullSecrets: []
# -- The release name override
nameOverride: ""
# -- The full release name override
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  name: ""

# -- Annotations to add to deployments
deploymentAnnotations: {}
# -- Annotations to add to the pods
podAnnotations: {}
# -- Label to add to the pods
podLabels: {}

# -- The Pod Security Context
podSecurityContext:
  {}
  # fsGroup: 2000
# -- The Security Context
securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- The service type
  type: ClusterIP
  # -- The service port
  port: 8000

ingress:
  # -- Enable Ingress
  enabled: false
  # -- Ingress Class Name
  className: ""
  # -- Ingress Annotations
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress Hosts
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- Ingress TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- The Resources
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Liveness Probe
livenessProbe:
  # httpGet:
  #   path: /
  #   port: http
# -- Readiness Probe
readinessProbe:
  # httpGet:
  #   path: /
  #   port: http

# -- Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- Node selector labels
nodeSelector: {}

# -- Tolerations
tolerations: []

# -- Affinity rules
affinity: {}

# -- Lifecycle hooks
lifecycle:
  preStop:
    exec:
      command:
      - sh
      - -c
      - sleep 15 && kill -SIGQUIT 1
