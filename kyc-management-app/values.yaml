# Default values for kyc-management-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- The number of replicas
replicaCount: 1

image:
  # -- The repository of the image
  repository: 673156464838.dkr.ecr.us-west-2.amazonaws.com/kyc-management-app
  # -- The pullPolicy used when pulling the image
  pullPolicy: IfNotPresent
  # -- The tag of the image. Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.4"

# -- The secrets used to pull the image
imagePullSecrets: []
# -- The release name override
nameOverride: ""
# -- The full release name override
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations to add to deployments
deploymentAnnotations: {}
# -- Annotations to add to the pods
podAnnotations: {}
# -- The labels to add to the pods
podLabels: {}

# -- The Pod Security Context
podSecurityContext:
  {}
  # fsGroup: 2000

# -- The Security Context
securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- The type of service to create
  type: ClusterIP
  # -- The port of the service
  port: 3000

ingress:
  # -- Whether to create an Ingress
  enabled: false
  # -- The Ingress Class Name to use
  className: ""
  # -- The Ingress Annotations
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- The Ingress Hosts
  hosts:
    []
    # - host: chart-example.local
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
  # -- The TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource limitations for the pods
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

kyc:
  api:
    baseUrl: "https://api-sandbox.hakata.io"
    authUrl: "https://auth-sandbox.hakata.io"
    clientId: ""
    clientSecret: ""

kycManagementApp:
  app:
    # -- The port of the app service
    port: 3000
    # -- The ENV vars to set on the app container
    envVars:
      {}
      # - name: FOO
      #   value: FOO
      # - name: BAR
      #   valueFrom:
      #     secretKeyRef:
      #       name: mySecret
      #       key: bar  offline:
  dex:
    # -- The port of the dex service
    port: 5556
    # -- The ENV vars to set on the dex container
    envVars:
      {}
      # - name: FOO
      #   value: FOO
      # - name: BAR
      #   valueFrom:
      #     secretKeyRef:
      #       name: mySecret
      #       key: bar  offline:
    # -- The configuration file for dex in base64 format
    configBase64: ""

# -- The Liveness Probe
livenessProbe:
  # httpGet:
  #   path: /health
  #   port: http
# -- The Readiness Probe
readinessProbe:
  # httpGet:
  #   path: /health
  #   port: http

# -- Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- Node selector labels
nodeSelector: {}

# -- Tolerations
tolerations: []

# -- Affinity rules
affinity: {}

databaseName: kyc

postgresql:
  # -- Enable local postgresql database server
  enabled: true
  primary:
    # -- Resources preset to set resource requests and limits
    resourcesPreset: "nano"
    # -- Extended configuration to configure postgresql server
    # extendedConfiguration: |
    #   max_connections=500
    #   max_locks_per_transaction=100
    #   max_pred_locks_per_relation=100
    #   max_pred_locks_per_transaction=5000
    #   max_wal_size=2048
    persistence:
      # -- Enable the persistence for the postgresql server
      enabled: false
      # -- Storage class for the postgresql server volume
      storageClass: ""
      # -- Size of the postgresql server volume
      size: 8Gi
  auth:
    # -- Username for the database
    username: username
    # -- Password for the database
    password: password
    # -- Enable the default postgres user
    enablePostgresUser: false
    # -- Database name
    database: kyc
