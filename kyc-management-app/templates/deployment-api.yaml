apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kyc-management-app.fullname" . }}-api
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "kyc-management-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kyc-management-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kyc-management-app.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kyc-management-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-db
          image: "{{ .Values.kycApi.image.repository }}:{{ .Values.kycApi.image.tag }}"
          imagePullPolicy: {{ .Values.kycApi.image.pullPolicy }}
          env:
            - name: DATABASE_URL
              value: {{ include "postgresUri" . | quote }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          #NOTE: This is a temporary solution until the application manages the DB population and migrations
          command:
            - sh
            - -c
            - |
              apk --update add postgresql-client
              psql $DATABASE_URL -f /db/prisma/migrations/0_init/migration.sql --set=ON_ERROR_STOP=1
              psql $DATABASE_URL -f /db/seed.sql --set=ON_ERROR_STOP=1
              echo DB migration done.
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.kycApi.image.repository }}:{{ .Values.kycApi.image.tag }}"
          imagePullPolicy: {{ .Values.kycApi.image.pullPolicy }}
          env:
            - name: DATABASE_URL
              value: {{ include "postgresUri" . | quote }}
            - name: KYC_API_BASE_URL
              value: {{.Values.kycApi.baseUrl}}
            - name: KYC_API_AUTH_URL
              value: {{.Values.kycApi.authUrl}}
            - name: KYC_API_CLIENT_ID
              value: {{.Values.kycApi.clientId}}
            - name: KYC_API_CLIENT_SECRET
              value: {{.Values.kycApi.clientSecret}}
            - name: EMAIL_SENDER_ADDRESS
              value: {{.Values.kycApi.emailSenderAddress}}
            - name: EMAIL_SERVICE
              value: {{.Values.kycApi.emailService}}
            - name: SENDGRID_API_KEY
              value: {{.Values.kycApi.sendgridApiKey}}
          ports:
            - name: api
              containerPort: {{ .Values.kycApi.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.kycApi.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.kycApi.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.kycApi.resources | nindent 12 }}
          volumeMounts:
          {{- with .Values.kycApi.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
